spring:
  application:
    name: sharding-demo
  shardingsphere:
    schema:
      name: lic_db
    rules:
      sharding:
        default-key-generate-strategy:
          column: id # 自增列名称，缺省表示不使用自增主键生成器
          key-generator-name: snowflake # 分布式序列算法名称
        tables:
          test:
            actual-data-nodes: lic-c-$->{0..1}.test_$->{2021..2022}_$->{1..12}
            # 分表
            table-strategy:
              standard:
                sharding-column: create_time
                sharding-algorithm-name: bytablesignandid3
            # 分库
            database-strategy:
              standard:
                sharding-column: id
                sharding-algorithm-name: byid
            key-generate-strategy: # 分布式序列策略
              column: id # 自增列名称，缺省表示不使用自增主键生成器
              key-generator-name: snowflake # 分布式序列算法名称
          star_demo:
            actual-data-nodes: lic-c-$->{0..1}.star_demo
        #        分片算法名称和配置
        sharding-algorithms:
          byid:
            type: INLINE
            props:
              algorithm-expression: lic-c-$->{id%2}
#          bytablesignandid2:
#            type: CLASS_BASED
#            props:
#              strategy: STANDARD
#              algorithm-clas-name: com.sharding.demo.shardingdemo.sharding.TablesShardingAlgorithm

          bytablesignandid3:
            type: INTERVAL
            props:
              datetime-pattern: "yyyy-MM-dd HH:mm:ss"
              datetime-lower: "2021-01-01 00:00:00"
              datetime-upper: "2022-12-31 23:59:59"
              sharding-suffix-pattern:  "yyyy_M"
              datetime-interval-amount: 1
              datetime-interval-unit: MONTHS
          # 策略名称 表策略 按照月份
#          bytablesignandid:
#            # 分片类型
#            type: auto_interval
#            props:
#              # 分片开始时间 要加""不然会被解析为非字符串类型导致拿不到值
#              datetime-lower: "2021-01-01 00:00:00"
#              # 分片秒数 这里是一天一张表 所以秒数为86400秒  要加""不然会被解析为非字符串类型导致拿不到值
#              sharding-seconds: "31536000"
#              # 分片结束时间 要加""不然会被解析为非字符串类型导致拿不到值
#              datetime-upper: "2022-12-31 23:59:59"
#      广播表规则列表
        broadcast-tables:
          - star_demo
        #        默认分库分表策略 默认不分片
        default-database-strategy:
          none:
        default-table-strategy:
          none:
        #            自增列生成算法名称和配置
        key-generators:
          snowflake:
            type: SNOWFLAKE
            props:
              worker-id: 999
              #              最大抖动上限值，范围[0, 4096)。注：若使用此算法生成值作分片值，建议配置此属性。此算法在不同毫秒内所生成的 key 取模 2^n (2^n一般为分库或分表数) 之后结果总为 0 或 1。为防止上述分片问题，建议将此属性值配置为 (2^n)-1
              max-vibration-offset: 1
              #              最大容忍时钟回退时间，单位：毫秒
              max-tolerate-time-difference-milliseconds: 100000
    datasource:
      names: lic-c-0,lic-c-1
      lic-c-0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.0.71:3306/lic_c_0?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowMultiQueries=true
        username: root
        password: root
        pool-name: HikariPool-lic-c-0
        #连接建立超时时间 单位ms 默认30000
        connection-timeout: 30000
        # 连接的最大持有时间,0为无限制 默认 30 分钟
        max-lifetime: 30000
        # 连接池中最大维持的连接数量 默认初始连接池是 10
        maximum-pool-size: 50
      lic-c-1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.0.71:3306/lic_c_1?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&allowMultiQueries=true
        username: root
        password: root
        pool-name: HikariPool-lic-c-1
        #连接建立超时时间 单位ms 默认30000
        connection-timeout: 30000
        # 连接的最大持有时间,0为无限制 默认 30 分钟
        max-lifetime: 30000
        # 连接池中最大维持的连接数量 默认初始连接池是 10
        maximum-pool-size: 50
    sharding:
      default-data-source-name: lic-c-0
      default-database-strategy:
        none: 1
    props:
      sql-show: true
#      sql-simple: true
server:
  port: 9011


mybatis-plus:
  mapperLocations: classpath*:/mapper/*.xml
  configuration:
    mapUnderscoreToCamelCase: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  type-aliases-package: com.sharding.demo.shardingdemo.entity



